@use "sass:math";

@use "settings";
@use "sass:map";

@mixin min-width($media-name) {
  @media (min-width: map.get(settings.$breakpoints, $media-name)) {
    @content;
  }
}

@function lh($factor) {
  @if $factor == 0 {
    @return 0;
  } @else if $factor == 1 {
    @return var(--base-line-height);
  } @else {
    @return calc(#{$factor} * var(--base-line-height));
  }
}

@mixin line-height-multiple($property, $factor, $important: null) {
  #{$property}: lh($factor) $important;
}

@function ratio-string($numerator, $denominator) {
  @if $numerator == 0 {
    @return "0";
  } @else if $denominator == 1 {
    @return $numerator;
  } @else {
    @return "#{$numerator}\\/#{$denominator}";
  }
}

@mixin ratios ($classes) {
  @each $class, $info in $classes {
    @each $num, $denom in settings.$ratios {
      $ratio: math.div($num, $denom);
      .#{$class}-#{ratio-string($num, $denom)} {
        @content($info, $ratio);
      }
    }
  }
}

@mixin responsive ($classes) {
  @each $class, $info in $classes {
    .#{$class} { @content($info); }
  }
  @each $name, $width in settings.$breakpoints {
    @media (min-width: $width) {
      @each $class, $info in $classes {
        .#{$name}\:#{$class} { @content($info); }
      }
    }
  }
}


@mixin mt($factor) {
  @include line-height-multiple("margin-top", $factor)
}

@mixin mb($factor) {
  @include line-height-multiple("margin-bottom", $factor)
}
