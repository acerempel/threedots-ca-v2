@use "mixins" as *;
@use "settings";
@use "sass:map";

@mixin dropdown-inner {
    position: absolute;
    background-color: var(--background-colour-lighter);
    padding: calc(var(--base-line-height)*0.25) calc(var(--base-line-height)*0.5);
    box-sizing: content-box;
    border-radius: 0.25em;
    box-shadow: 0px 2px 8px 1px rgba(16 16 16 / 0.5);
    z-index: 1;
    width: -webkit-max-content;
    width: max-content;
    bottom: calc(100% + 0.5rem);
    @include min-width(md) {
      bottom: initial;
      top: calc(100% + 0.125rem);
    }
}

.left {
  left: calc(0.375 * var(--base-line-height));
  @include min-width(md) { left: 0; }
}

.right {
  right: calc(0.375 * var(--base-line-height));
  @include min-width(md) { right: 0; }
}

.dropdown summary {
  display: block;
}

.dropdown .caret {
  transition: transform 0.2s ease;
  vertical-align: -0.125em;
  margin-left: -4px;
}

.dropdown[open] .caret {
  transform: rotate(-90deg);
  @include min-width(md) { transform: rotate(90deg); }
}

.dropdown-inner { @include dropdown-inner; }

.md-max\:dropdown-inner {
  @media (max-width: map.get(settings.$media, lg) - 0.1px) {
    @include dropdown-inner;
  }
}

.inline-list {
  display: flex;
  flex-wrap: wrap;
  margin-inline-start: 1em;
  @include min-width(sm) {
    margin-inline-start: 1.5em;
  }
  & li {
    list-style: none;
    margin-inline-start: 0;
    margin-inline-end: 1em;
    @include min-width(sm) {
      margin-inline-end: 1.5em;
    }
    &:first-child::before {
      content: "\200B";
    }
  }
}

.prose {
  h1, h2, h3, h4 {
    @include sans-serif;
    @include mb(var(--paragraph-spacing-factor, 0));
    &::last-child { margin-bottom: 0; }
  }
  h1 {
    @include font-size-4\.5;
    font-weight: 400;
    @include mb(0.75);
  }
  h2 {
    @include font-size-3;
    font-weight: 500;
    @include mt(0.75);
  }
  h3 {
    @include font-size-2;
    font-weight: 600;
    @include mt(0.5);
  }
  p, blockquote, figcaption, aside, details, li {
    @include serif;
  }
}

.big {
  h1 { @include font-size-5 }
  h2 { @include font-size-4 }
  h3 { @include font-size-3 }
}

.swing {
  @include mb(0.5);
  @include mt(1);
  @include min-width(bg) {
    height: 0;
    overflow: visible;
    transform-origin: top right;
    transform: translate(-100%, 0) rotate(-90deg) translate(calc(-0.25 * var(--base-line-height)), calc(-2 * var(--base-line-height)));
    text-align: right;
    transform-box: border-box;
    margin: 0;
    width: min-content;
  }
}

.dl-grid {
  @include min-width(sm) {
    display: grid;
    grid-template-columns: var(--width-narrow, 6ch) 1fr;
    grid-column-gap: var(--column-gap, 2ch);
  }
}

$full-width: settings.$max-width-content;

.main-grid {
  display: grid;
  justify-content: center;
  grid-template-columns: minmax(auto, $full-width);
  grid-template-areas: "header" "footer" "main";
  grid-row-gap: calc(0.25 * var(--base-line-height));

  @include min-width(bg) {
    grid-template-columns: minmax(28ch, 35ch) 1fr minmax(14ch, 21ch);
    grid-template-areas: "header rien footer" "main main main";
    grid-column-gap: 2ch;
  }

  @include min-width(lg) {
    grid-template-columns: 14ch $full-width 14ch;
    grid-template-areas: "header main footer";
  }

  & > header { grid-area: header; }
  & > footer { grid-area: footer; }
  & > main {
    grid-area: main;
    max-width: $full-width;
    justify-self: center;
  }
}

.top-nav > a {
  margin-right: 1ch;
  text-transform: lowercase;
  &:last-child { margin-right: 0; }
  @include min-width(lg) {
    @include mb(0.25);
  }
}

.main-footer {
  bottom: 0;
  left: 0;
  right: 0;
  background-color: var(--background-colour-lighter);
  @include min-width(md) {
    background-color: transparent;
  }
}
