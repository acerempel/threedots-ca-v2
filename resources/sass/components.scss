@use "mixins" as *;
@use "font" as *;
@use "settings";
@use "sass:list";
@use "heading";

$has-toggle: ();

@mixin toggle ($class, $properties) {
  .#{$class} {
    @each $name, $value in $properties {
      #{$name}: var(--#{$class}, $value);
    }
  }
  @if list.index($has-toggle, $class) == null {
    @include responsive (($class + -on, unset) ($class + -off, null)) using ($value) {
      --#{$class}: #{$value};
    }
    $has-toggle: list.append($has-toggle, $class) !global;
  }
}

.unstyled {
  -webkit-appearance: none;
  appearance: none;
  border: none;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
  background: transparent;
}

.control-outline:focus, .control-outline:active {
  outline-style: solid;
  outline-color: var(--text-colour-highlight);
  outline-offset: calc(-1 * var(--border-width, 0));
  outline-width: 2px;
}

.prose {
  h1 { @include heading.h1; }
  h2 { @include heading.h2; }
  h3 { @include heading.h3; }
  p, ol, ul, details, figure, blockquote {
    @include mb(0.75);
    &:last-child { @include mb(0) }
  }
}

.heading-1 { @include heading.h1 }
.heading-2 { @include heading.h2 }
.heading-3 { @include heading.h3 }

.swing {
  @include mb(0.5);
  @include mt(1);
  @include min-width(bg) {
    height: 0;
    overflow: visible;
    transform-origin: top right;
    transform: translate(-100%, 0) rotate(-90deg) translate(lh(-0.25), lh(-2));
    text-align: right;
    transform-box: border-box;
    margin: 0;
    width: min-content;
  }
}

.dl-grid {
  @include min-width(sm) {
    display: grid;
    grid-template-columns: var(--width-narrow, #{lh(3)}) 1fr;
    grid-column-gap: var(--column-gap, #{lh(1)});
  }
}

.bi {
  vertical-align: -0.125em;
}

.quotation {
  blockquote {
    @include mb(0.25)
  }
  figcaption {
    position: relative;
    @include font-size(1);
    padding-left: 2ch;
    &::before {
      content: 'â€”';
      position: absolute;
      left: 0;
    }
  }
}

.toc a[aria-current = "true"] {
  font-weight: 600;
}
