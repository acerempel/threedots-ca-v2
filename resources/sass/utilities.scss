@use "mixins" as *;
@use "font" as *;
@use "settings";
@use "sass:list";
@use "sass:meta";

.p-space-1 { --paragraph-spacing-factor: 1; }
.p-space-1\/2 { --paragraph-spacing-factor: 0.5; }
.p-space-1\/4 { --paragraph-spacing-factor: 0.25; }
.p-space-1\/8 { --paragraph-spacing-factor: 0.125; }

$abbrev-properties: (
  mt: margin-top,
  mb: margin-bottom,
  mr: margin-right,
  ml: margin-left,
  pl: padding-left,
  pr: padding-right,
  pt: padding-top,
  pb: padding-bottom,
);

@include ratios ((space-y: (top bottom), space-x: (left right))) using ($sides, $ratio) {
  $side-one: list.nth($sides, 1);
  $side-two: list.nth($sides, 2);
  & > * {
    @include line-height-multiple(margin-#{$side-one}, $ratio);
    @include line-height-multiple(margin-#{$side-two}, $ratio);
    &:first-child { margin-#{$side-one}: 0 }
    &:last-child { margin-#{$side-two}: 0 }
  }
}

@include ratios ($abbrev-properties) using ($property, $ratio) {
  @include line-height-multiple($property, $ratio, !important);
}

$responsive-utilities: (
  flex: (display flex),
  column: (flex-direction column),
  row: (flex-direction row),
  row-reverse: (flex-direction row-reverse),
  grid: (display grid),
  hidden: (display none),
  shown: (display initial),
  relative: (position relative),
  fixed: (position fixed),
  static: (position static),
  absolute: (position absolute),
  inline: (display inline),
  block: (display block),
  p-0: (padding 0),
  smaller: (--base-font-size 0.875rem) (--base-line-height 1.25rem),
  bigger: (--base-font-size 1.125rem) (--base-line-height 1.625rem),
  bg-normal: (background-color var(--background-colour-normal)),
  bg-lighter: (background-color var(--background-colour-lighter)),
  bg-transparent: (background-color transparent),
  light: (font-weight 300),
  regular: (font-weight 400),
  medium: (font-weight 500),
  semibold: (font-weight 600),
  bold: (font-weight 700),
  full-width: (width settings.$max-width-content),
);

@include responsive ($responsive-utilities) using ($utility) {
  @if meta.type-of(list.nth($utility, 1)) == list {
    @each $property-name, $property-value in $utility {
      #{$property-name}: $property-value !important;
    }
  } @else {
    #{list.nth($utility, 1)}: list.nth($utility, 2) !important;
  }
}

.colour-highlight { color: var(--text-colour-highlight) }
.colour-normal { color: var(--text-colour-normal) }
.colour-lighter { color: var(--text-colour-lighter) }

.font-size-5 { @include font-size-5 }
.font-size-4\.5 { @include font-size-4\.5 }
.font-size-4 { @include font-size-4 }
.font-size-3 { @include font-size-3 }
.font-size-2 { @include font-size-2 }
.font-size-1 { @include font-size-1 }

.serif { @include serif; }
.sans-serif { @include sans-serif; }

.space-between { justify-content: space-between; }
.wrap { flex-wrap: wrap; }

.flexible-items > * {
  flex: 1 0 auto;
}

.semibold, b { font-weight: 600; }
.bold, strong { font-weight: 700; }
.oblique, cite { font-style: oblique; }

.smallcaps {
  font-variant-caps: all-small-caps;
  letter-spacing: 0.02em;
}

.link-plain { --link-text-decoration-line: none; }

.thicker {
  --link-initial-text-decoration-thickness: 0.1em;
  --link-hover-text-decoration-thickness: 0.2em;
}

.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}
